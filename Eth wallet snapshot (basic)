### Wallet snapshot script by @CocoraEth
### Basic version (free) - snapshot list of unique NFT holders
### For custom features (transaction details, time NFT held by owner etc), contact me

Contract_address = "0x09646c5c1e42ede848a57d6542382c32f2877164"
Collection_size = 300

import requests
from time import sleep


url = "https://api.opensea.io/api/v1/assets"

def parse_asset_data(asset_dict):
    
    owner_address = asset_dict['owner']['address']
        
    result = {'owner_address': owner_address}
    
    return result

def wallet_snapshot(contractID, no_of_items):
    
    CollectionDB = []
    iterations = int(no_of_items/30)
    
    for i in range(0, iterations):
        querystring = {"token_ids":list(range((i*30)+1, (i*30)+31)),
                       "asset_contract_address":contractID,
                       "order_direction":"desc",
                       "offset":"0",
                       "limit":"30"}
        response = requests.request("GET", url, params=querystring)
        
        if i == 200:
            sleep(60)
        
        print(i, end=" ")
        if response.status_code != 200:
            print('error')
            break
        
        #Getting wallets list
        CollectionDB.append(response.json()['assets'])
           
    #Cocatonate list of lists
    CollectionDB = sum(CollectionDB, [])
    
    #Parsing asset data
    parsed_asset = [parse_asset_data(asset) for asset in CollectionDB]
     
    owner_address = [item['owner_address'] for item in parsed_asset]
    
    return owner_address

# Wallet List
wallets = wallet_snapshot(Contract_address,Collection_size)

# Remove duplicate addresses for holders of multiple NFTs
wallets_unique = list(set(wallets))
print('\nNo. of addresses = ', len(wallets))
print('No. of unique addresses = ', len(wallets_unique))

with open('snapshot.txt', 'w') as f:
    for item in wallets_unique:
        f.write("%s\n" % item)
